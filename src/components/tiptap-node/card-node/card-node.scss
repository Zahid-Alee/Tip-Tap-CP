// Card Node Styles
.card-node-wrapper {
  position: relative;
  margin: 1rem 0;
}

.tiptap-card {
  position: relative;
  padding: 1.5rem;
  border-radius: 8px;
  border: 2px solid;
  transition: all 0.2s ease;
  min-height: 60px;
  cursor: pointer;

  // Apply custom width and height if provided
  width: var(--card-width, auto);
  height: var(--card-height, auto);

  // Add a selection border area
  &::before {
    content: "";
    position: absolute;
    top: -4px;
    left: -4px;
    right: -4px;
    bottom: -4px;
    border: 2px solid transparent;
    border-radius: 10px;
    pointer-events: none;
    transition: all 0.2s ease;
  }

  &:hover::before {
    border-color: rgba(59, 130, 246, 0.3);
  }

  // Disable hover effects in read-only mode
  .read-only & {
    cursor: default;

    &:hover::before {
      border-color: transparent;
    }

    &:hover {
      border-color: var(--card-border-color, currentColor);
    }
  }

  // Default dark variant
  &--dark {
    background-color: var(--card-bg-color, #1a1a1a); // off-black
    border-color: var(--card-border-color, #2a2a2a); // off-black border
    color: var(--card-text-color, #f5f5f5); // off-white text

    &:hover {
      border-color: var(--card-border-color, #3a3a3a);
    }

    // Disable hover in read-only mode
    .read-only &:hover {
      border-color: var(--card-border-color, #2a2a2a);
    }

    // Override default styles when custom values are provided
    &[style*="background-color"] {
      background-color: var(--card-bg-color) !important;
    }
    &[style*="border-color"] {
      border-color: var(--card-border-color) !important;
    }
    &[style*="color"] {
      color: var(--card-text-color) !important;
    }
  }

  // Gray outline variant
  &--gray-outline {
    background-color: var(--card-bg-color, transparent);
    border-color: var(--card-border-color, #6b7280); // gray border
    color: var(--card-text-color, inherit);

    &:hover {
      border-color: var(--card-border-color, #9ca3af);
      background-color: var(--card-bg-color, rgba(107, 114, 128, 0.05));
    }

    // Disable hover in read-only mode
    .read-only &:hover {
      border-color: var(--card-border-color, #6b7280);
      background-color: var(--card-bg-color, transparent);
    }

    // Override default styles when custom values are provided
    &[style*="background-color"] {
      background-color: var(--card-bg-color) !important;
    }
    &[style*="border-color"] {
      border-color: var(--card-border-color) !important;
    }
    &[style*="color"] {
      color: var(--card-text-color) !important;
    }
  }

  // Selected state
  &--selected {
    outline: 2px solid #3b82f6;
    outline-offset: 2px;

    &::before {
      border-color: #3b82f6;
    }

    .tiptap-card-controls {
      opacity: 1;
      visibility: visible;
    }
  }

  // Show controls on hover as well
  &:hover {
    .tiptap-card-controls {
      opacity: 1;
      visibility: visible;
    }
  }

  // Resize handles
  .resize-handle {
    position: absolute;
    width: 8px;
    height: 8px;
    background-color: #3b82f6;
    border: 2px solid white;
    border-radius: 50%;
    z-index: 1000;
    transition: all 0.2s ease;
    opacity: 0.8;

    &:hover {
      background-color: #2563eb;
      transform: scale(1.2);
      opacity: 1;
    }

    // Corner handles
    &.nw {
      top: -4px;
      left: -4px;
      cursor: nw-resize;
    }
    &.ne {
      top: -4px;
      right: -4px;
      cursor: ne-resize;
    }
    &.sw {
      bottom: -4px;
      left: -4px;
      cursor: sw-resize;
    }
    &.se {
      bottom: -4px;
      right: -4px;
      cursor: se-resize;
    }

    // Side handles
    &.n {
      top: -4px;
      left: 50%;
      transform: translateX(-50%);
      cursor: n-resize;
    }
    &.s {
      bottom: -4px;
      left: 50%;
      transform: translateX(-50%);
      cursor: s-resize;
    }
    &.w {
      left: -4px;
      top: 50%;
      transform: translateY(-50%);
      cursor: w-resize;
    }
    &.e {
      right: -4px;
      top: 50%;
      transform: translateY(-50%);
      cursor: e-resize;
    }
  }
}
.tiptap-card-content {
  position: relative;
  z-index: 1;
  cursor: text;

  // Inherit card text color from CSS custom property
  color: var(--card-text-color, inherit);

  // Ensure content inherits card text color
  p,
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  li,
  span {
    color: inherit;
  }

  // Add padding to create a selection area around content
  &::before {
    content: "";
    position: absolute;
    top: -8px;
    left: -8px;
    right: -8px;
    bottom: -8px;
    pointer-events: none;
    border-radius: 4px;
    transition: background-color 0.2s ease;
  }

  // Show selection area on hover
  // .tiptap-card:hover &::before {
  //   background-color: rgba(59, 130, 246, 0.05);
  // }
}

// Card Controls
.tiptap-card-controls {
  position: absolute;
  top: -12px;
  right: 8px;
  z-index: 10;
  display: flex;
  gap: 4px;
  opacity: 0;
  visibility: hidden;
  transition: all 0.2s ease;
}

.tiptap-card-control-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 28px;
  height: 28px;
  background: #3b82f6;
  color: white;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  font-size: 12px;
  transition: all 0.2s ease;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

  &:hover {
    background: #2563eb;
    transform: translateY(-1px);
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
  }

  &:active {
    transform: translateY(0);
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  }

  svg {
    width: 14px;
    height: 14px;
  }
}

// Card Settings Panel
.tiptap-card-settings {
  position: absolute;
  top: 100%;
  right: 0;
  z-index: 20;
  background: white;
  border: 1px solid #e5e7eb;
  border-radius: 8px;
  padding: 0;
  margin-top: 8px;
  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  min-width: 280px;

  .dark & {
    background: #374151;
    border-color: #4b5563;
    color: white;
  }
}

.tiptap-card-settings-header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 12px 16px;
  border-bottom: 1px solid #e5e7eb;

  .dark & {
    border-bottom-color: #4b5563;
  }
}

.tiptap-card-settings-title {
  margin: 0;
  font-size: 14px;
  font-weight: 600;
  color: #374151;

  .dark & {
    color: #f3f4f6;
  }
}

.tiptap-card-settings-close {
  display: flex;
  align-items: center;
  justify-content: center;
  width: 20px;
  height: 20px;
  border: none;
  background: transparent;
  color: #6b7280;
  cursor: pointer;
  font-size: 18px;
  line-height: 1;
  border-radius: 4px;
  transition: all 0.2s ease;

  &:hover {
    background: #f3f4f6;
    color: #374151;
  }

  .dark & {
    color: #9ca3af;

    &:hover {
      background: #4b5563;
      color: #f3f4f6;
    }
  }
}

.tiptap-card-settings-section {
  margin-bottom: 16px;
  padding: 0 16px;

  &:first-of-type {
    padding-top: 16px;
  }

  &:last-child {
    margin-bottom: 0;
    padding-bottom: 16px;
  }
}

.tiptap-card-settings-label {
  display: block;
  font-size: 14px;
  font-weight: 600;
  margin-bottom: 8px;
  color: #374151;

  .dark & {
    color: #f3f4f6;
  }
}

// Variant Buttons
.tiptap-card-variant-buttons {
  display: flex;
  gap: 8px;
}

.tiptap-card-variant-btn {
  padding: 8px 12px;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  background: white;
  color: #374151;
  font-size: 12px;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    border-color: #3b82f6;
    background: #f0f9ff;
  }

  &.active {
    background: #3b82f6;
    color: white;
    border-color: #3b82f6;
  }

  .dark & {
    background: #4b5563;
    border-color: #6b7280;
    color: #f3f4f6;

    &:hover {
      border-color: #3b82f6;
      background: #1e40af;
    }

    &.active {
      background: #3b82f6;
      color: white;
    }
  }
}

// Color Controls
.tiptap-card-color-controls {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.tiptap-card-color-input {
  display: flex;
  align-items: center;
  justify-content: space-between;

  // Ensure container doesn't interfere with color input
  pointer-events: auto;
  position: relative;

  label {
    font-size: 12px;
    color: #6b7280;
    margin-right: 8px;
    pointer-events: none; // Labels shouldn't interfere

    .dark & {
      color: #d1d5db;
    }
  }

  input[type="color"] {
    width: 40px;
    height: 24px;
    border: 1px solid #d1d5db;
    border-radius: 4px;
    cursor: pointer;
    background: none;
    padding: 0;
    outline: none;
    overflow: visible;

    // Ensure the color input is not blocked by any parent styles
    position: relative;
    z-index: 1;
    pointer-events: auto;

    // Force the browser to treat this as a clickable element
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    // Ensure it's clickable in all browsers
    &:hover {
      border-color: #3b82f6;
    }

    &:focus {
      border-color: #3b82f6;
      box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
    }

    &::-webkit-color-swatch-wrapper {
      padding: 0;
      border: none;
    }

    &::-webkit-color-swatch {
      border: none;
      border-radius: 3px;
    }

    &::-moz-color-swatch {
      border: none;
      border-radius: 3px;
    }

    .dark & {
      border-color: #6b7280;
    }
  }
}

// Size Controls
.tiptap-card-size-controls {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.tiptap-card-size-input {
  display: flex;
  align-items: center;
  justify-content: space-between;

  label {
    font-size: 12px;
    color: #6b7280;
    margin-right: 8px;
    min-width: 40px;

    .dark & {
      color: #d1d5db;
    }
  }

  input[type="text"] {
    flex: 1;
    padding: 4px 8px;
    border: 1px solid #d1d5db;
    border-radius: 4px;
    font-size: 12px;
    background: white;
    color: #374151;

    &::placeholder {
      color: #9ca3af;
    }

    &:focus {
      outline: none;
      border-color: #3b82f6;
      box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.1);
    }

    .dark & {
      background: #4b5563;
      border-color: #6b7280;
      color: #f3f4f6;

      &:focus {
        border-color: #3b82f6;
      }
    }
  }
}

.tiptap-card-size-presets {
  display: flex;
  gap: 6px;
  flex-wrap: wrap;
}

.tiptap-card-size-hint {
  margin-top: 8px;
  text-align: center;

  small {
    color: #6b7280;
    font-size: 11px;
    font-style: italic;

    .dark & {
      color: #9ca3af;
    }
  }
}

.tiptap-card-preset-btn {
  padding: 4px 8px;
  border: 1px solid #d1d5db;
  border-radius: 4px;
  background: white;
  color: #374151;
  font-size: 11px;
  cursor: pointer;
  transition: all 0.2s ease;

  &:hover {
    border-color: #3b82f6;
    background: #f0f9ff;
  }

  .dark & {
    background: #4b5563;
    border-color: #6b7280;
    color: #f3f4f6;

    &:hover {
      border-color: #3b82f6;
      background: #1e40af;
    }
  }
}

// Resizable container
.card-resizable-container {
  display: block !important;

  .tiptap-card {
    width: 100% !important;
    height: 100% !important;
    min-width: unset !important;
    min-height: unset !important;
  }
}

/* Optional: Hide resize handles when not selected */
.card-node-wrapper:not(.ProseMirror-selectednode) {
  .card-resizable-container {
    [data-direction] {
      display: none !important;
    }
  }
}

// Responsive adjustments
@media (max-width: 768px) {
  .tiptap-card {
    padding: 1rem;
  }

  .tiptap-card-controls {
    top: -10px;
    right: 4px;
  }

  .tiptap-card-control-btn {
    width: 32px;
    height: 32px;

    svg {
      width: 16px;
      height: 16px;
    }
  }

  .tiptap-card-settings {
    position: fixed;
    top: 50%;
    left: 50%;
    right: auto;
    transform: translate(-50%, -50%);
    width: 90vw;
    max-width: 320px;
    margin-top: 0;
    max-height: 80vh;
    overflow-y: auto;
  }

  .tiptap-card-variant-buttons {
    flex-direction: column;
  }
}

// Dark mode support
.dark {
  .tiptap-card {
    &--gray-outline {
      &:hover {
        background-color: rgba(107, 114, 128, 0.1);
      }
    }
  }
}
